name: Release Android APK

on:
  push:
    tags:
      - "v1.0.0"
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version v1.0.0'
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android NDK
        run: |
          sdkmanager "ndk;25.0.8775105"
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.0.8775105" >> $GITHUB_ENV
          echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.0.8775105" >> $GITHUB_ENV

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: 'aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android'

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci

      - name: Install Tauri CLI
        run: |
          npm install --save-dev @tauri-apps/cli@latest
          npx tauri --version

      - name: Build frontend
        run: npm run build

      - name: Initialize Tauri Android
        run: |
          if [ ! -d "src-tauri/gen/android" ]; then
            npx tauri android init
          else
            echo "Android project already initialized"
          fi

      - name: Build Android APK
        run: npx tauri android build --apk --verbose

      - name: List APK files for debugging
        run: |
          echo "Looking for APK files..."
          find src-tauri/gen/android -name "*.apk" -type f || echo "No APK files found"
          ls -la src-tauri/gen/android/app/build/outputs/apk/ || echo "APK output directory not found"

      - name: Sign Android APK (optional)
        if: ${{ secrets.SIGNING_KEY != '' }}
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: src-tauri/gen/android/app/build/outputs/apk/universal/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Rename signed APK
        if: ${{ secrets.SIGNING_KEY != '' }}
        run: |
          if [ -f "${{ steps.sign_app.outputs.signedReleaseFile }}" ]; then
            mv "${{ steps.sign_app.outputs.signedReleaseFile }}" "CodeCA_${{ github.ref_name }}.apk"
          fi

      - name: Rename unsigned APK
        if: ${{ secrets.SIGNING_KEY == '' }}
        run: |
          APK_FILE=$(find src-tauri/gen/android -name "*.apk" -type f | head -1)
          if [ -f "$APK_FILE" ]; then
            mv "$APK_FILE" "CodeCA_${{ github.ref_name }}.apk"
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: "*.apk"

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.apk"
          token: ${{ github.token }}
          generateReleaseNotes: true
          name: 'CodeCA ${{ github.event.inputs.version || github.ref_name }}'
          tag: ${{ github.event.inputs.version || github.ref_name }}
          draft: false
